<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer on 金牙貓的嘴砲</title>
    <link>https://ericsuperman.github.io/categories/computer/</link>
    <description>Recent content in Computer on 金牙貓的嘴砲</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright>
    <lastBuildDate>Fri, 10 May 2019 12:40:23 +0800</lastBuildDate>
    
	<atom:link href="https://ericsuperman.github.io/categories/computer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu 19.04 and CloudFlare Free DNS</title>
      <link>https://ericsuperman.github.io/posts/computer/ub19dns/</link>
      <pubDate>Fri, 10 May 2019 12:40:23 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/ub19dns/</guid>
      <description>目前許多公司或個人，在租用ADSL或光纖時，選擇固定IP， 或是去雲端主機商，例如Amazon, Linode, Digital Ocean 租 一台 VPS (Virtual Private Server)，也會有固定IP。 有了固定IP，通常會去申請一個自己的 domain name，好做 一些個人網站或電子商務等。
所使用的 domain 註冊公司，不外乎是 namecheap.com 或是 Godaddy.com 為大宗，因為通常他們兩家最便宜。 然後就需要處理專屬於自己的 domain 的 Master DNS Server 了。
Master DNS Server 可以建在自己的固定 IP，但是我想大多數人 大概就是開個小網站，不會租超大頻寬。所以還是使用知名的 Free DNS Hosting Providers 服務，不但節省頻寬，載入網頁也 因為解析域名超快而整體快一點點。
Free DNS Hosting Providers 又根據不同的公司有不同的限制。 幾年前， namecheap.com 有提供 Free DNS Server，結果我域名 搬去namecheap.com 時，Free DNS Server 反而不能用，似乎是要 另外花錢買服務才有，(最近 namecheap.com 才推出 basic dns server 選項)，所以當時我就搬到 freedns.afraid.org。可是 麻煩又來了，freedns.afraid.org 會希望使用者贊助，或是半年 登入一次，不然就賣不然就賣給亂七八糟的人增加幾個 hosts。 例如，假設我擁有 example.</description>
    </item>
    
    <item>
      <title>Ubuntu 19.04 as a NAT Router</title>
      <link>https://ericsuperman.github.io/posts/computer/ub19nat/</link>
      <pubDate>Thu, 09 May 2019 19:35:20 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/ub19nat/</guid>
      <description>之前，在用VirtualBox 開箱 Ubuntu 19.04 的時候， 就刻意弄成兩張網卡，這次來玩一下 NAT Router ， 紀錄整個過程。
首先 /etc/sysctl.conf 找到下面這行，把 # 拿掉。
net.ipv4.ip_forward=1 現在 Linux 網路卡都不叫 eth0, eth1 了， 反而是 &amp;ldquo;enp0s3&amp;rdquo; ， &amp;ldquo;enp0s8&amp;rdquo; 這些怪名字， 這是因為 一致性網路設備命名規則 所規範的。 簡單地說，就是 Linux 原本是根據找到網卡的先後順序，命名為 eth0、 eth1 等。 可是一旦多插一張網卡，可能會導致 原本叫 eth1 的網卡，改名為 eth2 ， 萬一許多系統的script 寫死 eth0, eth1 ，那就會非常困擾。
所以改成 &amp;ldquo;enp0s3&amp;rdquo; ， &amp;ldquo;enp0s8&amp;rdquo; 這些名字，再多插幾張網路卡，名字也不會變。
假設 enp0s3 是對外的網路， enp0s8 是對內的網路，
Ubuntu 19.04 Server 剛裝好時，沒有 /etc/rc.local 。 所以就叫出文字編輯器，編輯 /etc/rc.local 如下， 最後用 exit 0 結尾。</description>
    </item>
    
    <item>
      <title>[CMD Tutorial 4/4] Batch Files</title>
      <link>https://ericsuperman.github.io/posts/computer/command4/</link>
      <pubDate>Thu, 09 May 2019 14:50:29 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/command4/</guid>
      <description>如果某個任務，需要執行數個命令，都可以用文字檔集結成數行，該文字檔副檔名必須為 .bat ，CMD可以執行 bat 檔案，執行順序就是循序一行執行完成，再換下一行。 我們利用之前介紹的 CON 系統檔案，產生一個簡單的 bat 檔案，接著執行它，看結果是什麼。
C:\Users\Eric&amp;gt;copy con a.bat set msg=hello echo %msg% echo world ^Z 複製了 1 個檔案。 C:\Users\Eric&amp;gt;a C:\Users\Eric&amp;gt;set msg=hello C:\Users\Eric&amp;gt;echo hello hello C:\Users\Eric&amp;gt;echo world world C:\Users\Eric&amp;gt; 上面例子就是簡單的三行，第一行設定變數msg，第二行印出msg的內容，第三行印出普通訊息。可以看到，a.bat 執行到第二行的時候，CMD 已經將變數內容都換好了才執行。
通常在開發程式的時候，需要的工具包括了文字編輯器或是IDE(Integrated Development Environments，整合開發環境)，編譯程式，Make自動化編譯工具&amp;hellip;等，所以即使叫出了 Command Prompt，也許還需要設定一堆環境變數，讓全部的工具程式，都能正確執行。而且每次叫出Command Prompt，執行的內容幾乎沒什麼變化，那當然就是準備好一個設定環境變數的批次檔，叫出Command Prompt的時候執行一次，這樣才比較有效率。</description>
    </item>
    
    <item>
      <title>[CMD Tutorial 3/4] Path Environment Variables</title>
      <link>https://ericsuperman.github.io/posts/computer/command3/</link>
      <pubDate>Thu, 09 May 2019 14:50:23 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/command3/</guid>
      <description>環境變數 Windows Command Prompt 也有變數的觀念，命令在執行的時候，可以讀取特定變數，然後就像執行命令時帶參數一樣，以不同的模式執行。 例如你可以開發一個aaa程式，執行時需要兩個參數，也可以使用ENV_AAA環境變數，
d:\&amp;gt; aaa c:\aaa d:\bbb 以上例子，兩個參數都是路徑，如果執行很多次會打字打個很累，正好aaa的開發人員寫成也可使用ENV_AAA 環境變數，所以下列方式也可以
d:\&amp;gt; set ENV_AAA=&amp;#34;c:\aaa d:\bbb&amp;#34; 環境變數設定完成後，執行執行 aaa 就可以了，不需要打參數了。 d:\&amp;gt; aaa
蠻多命令，都將不常變動的參數規劃放在環境變數，省下頻繁地打一堆字。 執行一份CMD的時候，作業系統會將全部的環境變數複製一份，這些環境變數專屬於該份CMD ，結束時會自動清掉。也就是說，如果同時執行兩份CMD，Windows 是複製出兩份系統的環境變數給這兩個CMD，兩邊各改了什麼，也不會影響對方，結束時也不會影響Windows系統的環境變數。 如果不小心改壞了什麼環境變數，可以關掉CMD，重新執行一次即可。
SET 想要看總共有哪些環境變數，可用set不帶任何參數
d:\&amp;gt; set set 加上參數，就是設定環境變數了，語法為 set =
d:\&amp;gt; set ENV_AAA=&amp;#34;c:\aaa d:\bbb&amp;#34; ECHO set一執行，舊式列出全部環境變數，如果只是想要看一個變數，可以用 echo 來顯示訊息。 C:\Users\Eric&amp;gt;set ENV_AAA=&amp;ldquo;c:\aaa d:\bbb&amp;rdquo;
C:\Users\Eric&amp;gt;echo %ENV_AAA% &amp;#34;c:\aaa d:\bbb&amp;#34; echo 也能印普通訊息，例如印個經典的 &amp;ldquo;Hello, World!&amp;rdquo;
C:\Users\Eric&amp;gt;echo Hello, World! Hello, World! PATH 當然，有一些名稱，被保留給系統使用，例如 PATH ，就是代表系統搜尋外部命令的路徑順序，每個路徑都必須以分號隔開。這個PATH環境變數因為太常用了，所以Microsoft乾脆開發一個PATH命令，專門負責顯示及修改PATH環境變數。
d:\&amp;gt; path 執行結果如下:
d:\&amp;gt;path PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Git\cmd;C:\Users\Eric\AppData\Local\Microsoft\WindowsApps; 上面Path變數的內容，其意義為 - 假設使用者想要執行 aaa.</description>
    </item>
    
    <item>
      <title>[CMD Tutorial 2/4] Command Prompt Basic Commands</title>
      <link>https://ericsuperman.github.io/posts/computer/command2/</link>
      <pubDate>Thu, 09 May 2019 14:50:20 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/command2/</guid>
      <description>切換工作磁碟機與路徑 Windows 沿襲DOS傳統，可將一顆硬碟切割成數個 Paritition，每一個Partition分配一個磁碟機代碼，由A到Z，最多26個磁碟，A磁碟的名稱為A:，B磁碟的名稱為B:，A磁碟與B磁碟是保留給軟碟機，雖然現在已經很難看到軟碟機了。硬碟則是C:開始，開機用的 Windows 目錄也通常位於C:。
假設使用者規劃了一個D磁碟機，專門放資料，其中工作的目錄規劃為d:\prj 目錄，則可用下列方式切換磁碟機與路徑 -
c:\&amp;gt;d: d:\&amp;gt;cd prj d:\prj&amp;gt; 以前DOS沒下列語法，但在Windows 10 Command Prompt，可以合併為下列方式 - c:\&amp;gt;cd d:\prj d:\prj&amp;gt;
顯示檔案清單 d:\prj&amp;gt; dir 變更檔案名稱 d:\prj&amp;gt; ren a1.txt a2.txt 上面例子中，a1.txt 是變更前的檔名，必須已經存在於目前目錄，不然會有錯誤訊息。 a2.txt 是變更後的檔名，必須不存在。如果已經存在，會有錯誤訊息。 命令執行完成後，a1.txt就不存在了，會有一個a2.txt檔案，內容跟原始的a1.txt 一樣。
複製檔案 d:\prj&amp;gt; copy a1.txt a2.txt 上面例子中，a1.txt 是來源檔，必須已經存在於目前目錄，不然會有錯誤訊息。 a2.txt 是目的地檔，如果已經存在，會被蓋掉，a1.txt 不會有任何變更。 命令執行完成後，a1.txt與a2.txt 同時存在，兩個檔案內容也是一樣。 簡易建立檔案
Windows 保留一些特殊檔名，例如 con 代表 Console。有時候想要產生一個新檔案，打幾個字，叫出文字編輯器，打幾個字，存檔，實在太慢，不如用在 Command Prompt 利用 con 檔案就能輕鬆解決 -
d:\prj&amp;gt; copy con test.txt abc ^z 複製了 1 個檔案。 d:\prj&amp;gt; 上面例子中，先打了abc三個字母代表內容，之後 ^Z 這個字是按了 Ctrl-Z，這是Windows 規定好的 EOF(End of File)字元，Windows看到這個字，等同於檔案結尾，因此確定了整個檔案，接著開始複製整個檔案，一個新的test.</description>
    </item>
    
    <item>
      <title>[CMD Tutorial 1/4] What is Windows Command Prompt?</title>
      <link>https://ericsuperman.github.io/posts/computer/command1/</link>
      <pubDate>Thu, 09 May 2019 14:50:16 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/command1/</guid>
      <description>Windows Command Prompt 在Windows被發明之前，當時主流的電腦作業系統是 MS-DOS (Microsoft Disk Operating System)，以文字下命令的方式跟電腦溝通。雖然沒有圖形化介面友善，但其實主流的電腦作業系統熟悉MS-DOS命令的人，能夠飛快地打字，迅速地做很多事情。例如刪除一個檔案，Windows 需要叫出檔案管理員，用滑鼠找到該檔案，按右鍵，選刪除，如果在 DOS 環境，敲鍵盤 &amp;ldquo;del &amp;ldquo;，同時利用鍵自動補齊檔名的功能，很快地就能刪除檔案。所以Windows發展了這麼多代，都還是保留一個類似的介面。
到現在，大部分使用者偏好這種幾乎不用學習的圖形化介面，日常生活操作也幾乎都能用圖形化介面完成，文字介面就很少人用了。大概只剩下少數場合，例如學習程式設計，撰寫程式碼仍然利用圖形化介面的文字編輯器，可是編譯程式碼、執行，使用 Command Prompt 會比較方便。
那在Windows 10環境，如何執行 Command Prompt呢? 在左下角搜尋功能裡面打 &amp;ldquo;CMD&amp;rdquo; ，系統會找出&amp;rdquo;命令提示字元&amp;rdquo; ，執行該命令，就進入了command line模式了。如果近期內會常用 CMD，可以釘選到工具列，比較方便。
進入 Command Prompt 後，通常會先打個 DIR ，看看有哪些檔案，位於什麼路徑。
c:\&amp;gt; dir DIR 其實有很多參數可做變化，例如列出隱藏檔、用別的欄位排序顯示等，詳細用法可以用 Help DIR 來看。其他命令也可以用 &amp;ldquo;HELP &amp;ldquo;來看該命令的詳細說明。
c:\&amp;gt; help dir 顯示檔案清單以列出目錄中的檔案及子目錄。 DIR [drive:][path][filename] [/A[[:]attributes]] [/B] [/C] [/D] [/L] [/N] [/O[[:]sortorder]] [/P] [/Q] [/R] [/S] [/T[[:]timefield]] [/W] [/X] [/4] [drive:][path][filename] 指定要顯示的磁碟機、目錄或檔案。 /A 顯示具有指定之屬性的檔案。 attributes D 目錄 R 唯讀檔案 H 隱藏檔案 A 待封存檔案 S 系統檔案 I 非內容索引檔案 L 重新分析點 O 離線檔案 - 首碼表示否定 /B 使用單純格式 (沒有標頭資訊或摘要)。 /C 在檔案大小中顯示千位分隔符號。這是預設值。使用 /-C 可停用 分隔符號的顯示。 /D 與寬的列表格式相同，但是依照欄來排序。 /L 使用小寫顯示。 /N 使用新的長列表格式，檔名會顯示在最右方。 /O 依照指定的排序順序來列出檔案。 sortorder N 依名稱 (英文字母) S 依大小 (最小的在前) E 依副檔名 (英文字母) D 依日期/時間 (日期較早的在前) G 先列出子目錄 - 首碼表示相反的順序 /P 當資料填滿整個螢幕時暫停顯示。 /Q 顯示檔案擁有者。 /R 顯示檔案的替代資料流。 /S 顯示指定目錄及所有子目錄中的檔案。 /T 控制用來顯示或排序的時間欄位 timefield C 建立 A 上次檔案存取時間 W 上次寫入檔案時間 /W 使用寬的列表格式。 /X 顯示對非 8.</description>
    </item>
    
    <item>
      <title>Ubuntu 19.04 開箱</title>
      <link>https://ericsuperman.github.io/posts/computer/ub19/</link>
      <pubDate>Sat, 04 May 2019 10:52:52 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/ub19/</guid>
      <description>Ubuntu 19.04 正式推出了，這一版不是 Long Term Support 版， 不過還是用 VirtualBox 玩玩看 Ubuntu Server好了， 看看那些東西進步了。
先新增一台虛擬PC，我的Host PC裝了很多ram， 所以這裡就很大方地給這台虛擬PC 4GB ram。
硬碟則是配了 128GB，反正VirtualBox對虛擬硬碟是 實際用多少才配置多少，一開始不會太大。如果想要玩 編譯 Linux Kernel 或 OpenWRT 的話，預設的10GB是不夠的。
再來，反正是在家裡隨便玩玩，我習慣模擬兩張網卡， 都用Bridge方式接到內網，
Ubuntu 安裝後，一張網卡配 191.168.1.x 的IP， 另一張網卡配 10.10.10.x 的IP， 如果要測試 NAT 功能，或是其他 gateway的功能， 兩張網卡才能做。
最後，虛擬光碟機要接到 ubuntu-19.04-live-server-amd64.iso 檔案，就能開機了。 第一次開機，從虛擬光碟boot，進入安裝程式， 安裝步驟雖然有14步，大部分預設值都沒問題， 通常都直接按Enter進到下一步。
第0步，選英文，直接按下去。 第1步，安裝程式 在 GitHub 有新版，問要不要換。 這個安裝光碟在開機時就利用DHCP連上網路了， 所以可以去GitHub看看有無新版， 網路都連好了，安裝程式也不大，當然就換新的安裝程式啊! Enter按下去。 第2步，是否確認是英文鍵盤， Enter按下去。 第3步，Enter按下去。 第4步，兩張網卡預設為用 DHCP 。這個我要改 &amp;hellip;&amp;hellip; 我玩這份 Ubuntu 就是要當 Server ，必須是固定IP。 選 Manual 進入 static IP 設定頁。 如下圖，把每個欄位都填一填。 第二張網卡也如法炮製，但是就不要跟第一張網卡同網段了， 未來利用這兩張網卡，兩個網段，可以來玩一些閘道器的功能。 第5步，Enter直接按下去，除非你的網路需要 proxy 才能連到 Internet。 第6步，Enter直接按下去，除非你知道有更快的 Ubuntu Mirror 站台。 我目前的設定，讓安裝程式跳過第7步了，我也不知道那是啥。</description>
    </item>
    
    <item>
      <title>VirtualBox 6.x Shared Folder</title>
      <link>https://ericsuperman.github.io/posts/computer/vbox/</link>
      <pubDate>Sun, 21 Apr 2019 21:51:33 +0800</pubDate>
      
      <guid>https://ericsuperman.github.io/posts/computer/vbox/</guid>
      <description>前一版的 Ubuntu 16.04 LTS，它當 VirtualBox Guest OS 的時候， 可以安裝一個現成 virtualbox-dkms 套件，裝好之後， shared folder 就自動生效了，非常方便。
Ubuntu 18.04 LTS 問世之後，它的 virtualbox-dkms 套件 是針對 VirtualBox 5.2.18 及之後版本，當時 VirtualBox 也 是 5.2x 左右，一切也沒問題。
突然間，2018年12月 VirtualBox 6.0 降臨了，我直接將 VirtualBox 5.x 升級到 VirtualBox 6.0 ，跑一樣的 guest image， Shared Folder 就失效了。
查了很久，才發現是 virtualbox-dkms 套件只支援 VirtualBox 5.x 的關係，等了一陣子，看起來 Ubuntu 18.04 是沒打算升級 dkms 套件了， 那只好回到老方法，讓 VirtualBox Host 這邊插入虛擬的 Guest Additions 光碟片。
在 VirtualBox Host 這邊的 Menu Bar ，有一個 &amp;ldquo;裝置&amp;rdquo; 選項，裡面 有一個 &amp;ldquo;插入 Guest Additions CD 映像&amp;rdquo;。</description>
    </item>
    
  </channel>
</rss>